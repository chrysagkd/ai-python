#1:εισαγωγή βιβλιοθηκών
import tensorflow as tf#1:εισαγωγή  TensorFlow 
from tensorflow import keras#1:εισαγωγή Keras από το TensorFlow 
from tensorflow.keras import layers#1:εισαγωγή υποπακέτου του Keras που περιλαμβάνει layers για την δημιουργια ΝΔ
#2:εκχωρώ τιμές στο ύψος(τυχαιες)
height = [160, 165, 170, 175, 180, 185, 190, 195, 160, 165, 170, 175, 180, 185, 175, 160, 
          175, 165, 170, 175, 180, 175, 170, 160, 165, 170, 175, 
          180, 185, 175, 160, 175, 165, 170, 175, 180, 175, 170]#2:υποθέτουμε τα ακόλουθα δεδομένα εκπαίδευσης (υψος, βάρος)
#2:ορίζω τυχαίες τιμές βάρους
weight = [50, 55, 60, 65, 70, 75, 80, 85, 79, 72, 86, 75, 67, 74,
76, 79, 89, 76, 78, 73,
85, 78, 80, 81, 65, 81,
76, 66, 79, 77, 80, 72,
78, 67, 76, 73, 83, 70 ]  

model = keras.Sequential([ #3:#δημιουργία του μοντέλου παλινδρόμησης
    layers.Dense(units=1, input_shape=[1])  #3:ενός νευρώνας για απλή παλινδρόμηση
])

#3:ορισμός της συνάρτησης MSE
model.compile( loss='mean_squared_error')  

#4:εκπαίδευση του μοντέλου με δεδομένα ύψους-Βάρους
model.fit(height, weight, epochs=1000)  #4: Εκπαιδεύουμε για 1000 εποχές
#4:υπολογισμός και εμφάνιση μέσου τετραγωνικού σφάλματος
mse = model.evaluate(height, weight)
print(f'Mean Squared Error: {mse}')
#5:προβλέψη βάρους για νέο ύψος
new_height = [173]  #5:εισάγουμε νέο ύψος
predicted_weight = model.predict(new_height)#5:πρόβλεψη βάρους με βάση το νέο ύψος
print('Προβλεπόμενο βάρος:', predicted_weight[0, 0], 'κιλά')
